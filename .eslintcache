[{"D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\Components.js":"1","D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\Screens\\AddVideo.js":"2","D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\index.js":"3","D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\Screens\\VideoScreen.js":"4","D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\reportWebVitals.js":"5","D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\App.js":"6"},{"size":13457,"mtime":1607448092000,"results":"7","hashOfConfig":"8"},{"size":3070,"mtime":1608732490797,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":1607448092000,"results":"10","hashOfConfig":"8"},{"size":9084,"mtime":1608889324772,"results":"11","hashOfConfig":"8"},{"size":362,"mtime":1607448092000,"results":"12","hashOfConfig":"8"},{"size":543,"mtime":1607448495000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"6em3q0",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\Components.js",["29","30","31","32"],"import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport image from \"./img.jpg\"\n\nexport function ItemCard(props) {\n    let style = {\n        container: {\n            overflow: 'hidden',\n            borderRadius: 10,\n            padding: 10,\n            backgroundColor: '#fff',\n            display: 'flex',\n            flexDirection: 'row',\n            margin: 10,\n            boxShadow: '0px 4px 5px silver',\n            width: 100 + \"%\"\n        },\n        img: {\n            width: 100 + \"%\",\n            height: 100 + \"%\",\n            objectFit: 'cover',\n        },\n        imgCon: {\n            width: 90,\n            height: 90,\n            minWidth: 90,\n            minHeight: 90,\n            borderRadius: 10,\n            overflow: 'hidden',\n            position: 'relative'\n        },\n        imgTxt: {\n            position: 'absolute',\n            bottom: 0,\n            margin: 0,\n            padding: 0,\n            backgroundColor: 'rgba(0, 196, 82,0.8)',\n            width: 100 + \"%\",\n            fontSize: 0.9 + 'em',\n            color: 'white',\n            textAlign: 'center',\n            fontWeight: 500\n        },\n        textCon: {\n            marginLeft: 5,\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n        },\n        title: {\n            fontWeight: 'bold',\n            fontSize: 1.2 + 'em',\n            margin: 0,\n            marginBottom: 5\n        },\n        description: {\n            fontSize: 0.8 + 'em',\n            margin: 0,\n        },\n        linkStyle: {\n            display: 'flex',\n            color: 'black',\n            textDecoration: 'none',\n            width: 100 + \"%\"\n        }\n    }\n    let limit = 10;\n    return (\n        <Link to={props.to} style={{ ...style.linkStyle, ...props.linkStyle }} >\n            <abbr title={props.title.length > limit ? props.title : null} style={{ textDecoration: 'none',display:'flex',width:100+'%' }}>\n                <div style={{ ...style.container, ...props.containerStyle }} className={props.containerClassName}>\n                    <div style={style.imgCon}>\n                        <img src={props.src} style={style.img} />\n                        <h1 style={style.imgTxt}>{props.size}</h1>\n                    </div>\n                    <div style={style.textCon}>\n                        <h4 style={style.title}>{props.title ? props.title.length > limit ? props.title.slice(0, limit) + \"...\" : props.title : null}</h4>\n                        <p style={style.description}>{props.description}</p>\n                    </div>\n                </div>\n            </abbr>\n        </Link>\n    );\n}\n\n\nexport function CaseCard(props) {\n    let style = {\n        container: {\n            display: 'flex',\n            margin: 10,\n            padding: 5,\n            flexDirection: 'row',\n            backgroundColor: '#fff',\n            borderRadius: 10,\n            position: 'relative',\n            boxShadow: '0px 4px 5px silver',\n        },\n        icon: {\n            margin: 5,\n            color: '#00c452',\n            fontSize: 2 + 'em'\n        },\n        title: {\n            fontWeight: 'bold',\n            fontSize: 1 + 'em',\n            margin: 0,\n        },\n        description: {\n            fontSize: 0.8 + 'em',\n            margin: 0,\n            fontWeight: 500,\n            color: 'gray'\n        },\n        textCon: {\n            marginLeft: 5\n        },\n        moreIcon: {\n            position: 'absolute',\n            right: 0,\n            marginRight: 10,\n            fontSize: 1.5 + 'em',\n            top: 50 + \"%\",\n            transform: \"translateY(-50%)\",\n        },\n    }\n    return (\n        <div style={{ ...style.container, ...props.containerStyle }}>\n            <i style={style.icon} className=\"fa fa-folder\"></i>\n            <div style={style.textCon}>\n                <h3 style={style.title}>{props.title}</h3>\n                <h3 style={style.description}>{props.videos} Videos - {props.private ? \"Private\" : null} {props.shared ? \"Shared\" : null}</h3>\n            </div>\n            <i style={style.moreIcon} className=\"fa fa-ellipsis-v hover\"></i>\n        </div>\n    )\n}\n\nexport function VideoCard(props) {\n    let style = {\n        container: {\n            display: 'flex',\n            margin: 10,\n            padding: 7,\n            flexDirection: 'row',\n            backgroundColor: '#fff',\n            borderRadius: 10,\n            alignItems: 'center',\n            position: 'relative',\n            boxShadow: '0px 4px 5px silver',\n        },\n        moreIcon: {\n            position: 'absolute',\n            right: 0,\n            marginRight: 10,\n            fontSize: 1.5 + 'em',\n            top: 50 + \"%\",\n            transform: \"translateY(-50%)\",\n        },\n        description: {\n            flex: 1,\n            fontSize: 0.8 + 'em',\n            fontWeight: 500,\n            color: '#000',\n        },\n        type: {\n            backgroundColor: \"#00c452\",\n            borderRadius: 5,\n            width: 40,\n            height: 40,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            color: '#fff'\n        },\n        typeNameCon: {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            flex: 1\n        }\n    }\n    return (\n        <div style={style.container}>\n            <div style={style.typeNameCon}>\n                <div style={style.type}>\n                    {props.type}\n                </div>\n                <h1 style={{ ...style.description, marginLeft: 10, flex: 0 }}>{props.name}</h1>\n            </div>\n            <h1 style={style.description}>{props.size}</h1>\n            <h1 style={style.description}>{props.status}</h1>\n            <h1 style={style.description}>{props.time}</h1>\n\n            <i style={style.moreIcon} className=\"fa fa-ellipsis-v hover\"></i>\n        </div>\n    )\n}\n\nexport function Nav(props) {\n    let style = {\n        container: {\n            display: 'flex',\n            flexDirection: 'row',\n            padding: 10,\n        },\n        searchIcon: {\n            fontSize: 1.3 + 'em',\n        },\n        inputCon: {\n            display: 'flex',\n            flex: 4,\n            backgroundColor: '#fff',\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: 'center',\n            alignItems: 'center',\n            overflow: 'hidden'\n        },\n        input: {\n            borderWidth: 0,\n            height: 100 + \"%\",\n            width: 100 + \"%\",\n            marginLeft: 10,\n            fontSize: 0.9 + \"em\"\n        },\n        profileCon: {\n            flex: 1,\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            alignItems: 'center',\n        },\n        bellIcon: {\n            color: \"#00c452\",\n            fontSize: 1.5 + 'em'\n        },\n        bellCon: {\n            position: 'relative'\n        },\n        bellNotification: {\n            height: 8,\n            width: 8,\n            borderRadius: 100,\n            borderWidth: 2,\n            borderColor: '#fff',\n            borderStyle: 'solid',\n            position: 'absolute',\n            top: 2,\n            right: 0,\n            backgroundColor: 'red',\n        },\n        profilePic: {\n            width: 40,\n            height: 40,\n            borderRadius: 100,\n            marginLeft: 10\n        },\n        select: {\n            marginLeft: 10,\n            borderRadius: 5,\n            backgroundColor: 'transparent',\n            borderColor: 'transparent',\n            color: 'gray',\n        },\n    }\n    return (\n        <div style={style.container}>\n            {props.rightIcon}\n            {props.hideSearch ? null : <div style={style.inputCon} className=\"smSearchCon\">\n                <i style={style.searchIcon} className=\"fa fa-search\"></i>\n                <input style={style.input} placeholder=\"Search Files\" />\n            </div>}\n\n            <div style={{ flex: 0.3 }} className=\"navDividerDiv\"></div>\n            <div style={style.profileCon}>\n\n                <div style={style.bellCon} className=\"hover\">\n                    <i style={style.bellIcon} className=\"fa fa-bell\"></i>\n                    <div style={style.bellNotification}></div>\n                </div>\n\n                <img style={style.profilePic} className=\"hover\" src={props.src} />\n\n                <select style={style.select}>\n                    <option value=\"0\">Tom Avery</option>\n                    <option value=\"1\">Option</option>\n                    <option value=\"2\">Option</option>\n                </select>\n\n            </div>\n        </div>\n    );\n}\n\n\nexport function CategoryTextRow(props) {\n    let style = {\n        container: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            margin: 10,\n            alignItems: 'center'\n        },\n    }\n    return (\n        <div style={style.container}>\n            <h2 style={{ margin: 0 }}>{props.title}</h2>\n            <h6 style={{ margin: 0 }}>{props.rightTxt}</h6>\n        </div>\n    );\n}\n\nexport function SideDrawer(props) {\n    let style = {\n        container: {\n            backgroundColor: '#000',\n            flexDirection: 'column',\n            padding: 40,\n            minHeight: 100 + \"vh\",\n            height: 100 + '%',\n            margin: 0\n        },\n    }\n    return (\n        <div style={style.container} className={props.shown ? \"show dwrNav\" : \"dwrNav hide\"}>\n            <img src={image} style={{ height: 50 }}></img>\n            <Link to=\"/\" className=\"dwrLink\"><i className=\"fa fa-th-large dwrNavIcon\" />Dashboard</Link>\n            <Link to=\"/\" className=\"dwrLink\"><i className=\"fa fa-file dwrNavIcon\" />My Videos</Link>\n            <Link to=\"/\" className=\"dwrLink\"><i className=\"fa fa-history dwrNavIcon\" />Recent Videos</Link>\n            <Link to=\"/video\" className=\"dwrLink\"><i className=\"fa fa-users dwrNavIcon\" />Shared With Me</Link>\n            <Link to=\"/video\" className=\"dwrLink\"><i className=\"fa fa-trash dwrNavIcon\" />Deleted</Link>\n            <Link to=\"/video\" className=\"dwrLink\"><i className=\"fa fa-sign-out dwrNavIcon\" />Logout</Link>\n        </div>\n    );\n}\n\n\nexport function Button(props) {\n    let style = {\n        btn: {\n            padding: 10,\n            borderWidth: props.green ? 0 : 1,\n            borderColor: \"#000\",\n            borderStyle: 'solid',\n            borderRadius: 10,\n            boxShadow: '0px 4px 5px silver',\n            fontSize: 'large',\n            color: props.green ? '#fff' : '#000',\n            backgroundColor: props.green ? '#00c452' : '#fff',\n        }\n    }\n    return (\n        <button style={{ ...style.btn, ...props.style }} className={props.className ? props.className : \"hover\"} onClick={props.onClick}>{props.title}</button>\n    );\n}\n\nexport function TranscriptRow(props) {\n    let style = {\n        container: {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            margin: '5px 10px',\n        },\n        name: {\n            fontSize: 0.9 + 'em',\n            color: props.green ? '#00c452' : '#000',\n            margin: 0,\n            fontWeight: 'normal'\n        },\n        message: {\n            fontSize: 0.9 + 'em',\n            color: props.green ? '#00c452' : '#000',\n            margin: 0,\n            marginLeft: 10,\n            fontWeight: 'normal'\n        }\n    }\n\n    return (\n        <div style={{ ...style.container, ...props.containerStyle }}>\n            <h5 style={{ ...style.name, ...props.nameStyle }}>{props.name}:</h5>\n            <h5 style={{ ...style.message, ...props.messageStyle }}>{props.message}</h5>\n        </div>\n    );\n}\n\nexport function PeopleCard(props) {\n    let style = {\n        container: {\n            display: 'flex',\n            flexDirection: 'row',\n            margin: 10,\n        },\n        img: {\n            width: 90,\n            height: 90,\n            borderRadius: 10,\n            overflow: 'hidden',\n            objectFit: 'cover',\n            marginLeft: 10\n        },\n        textCon: {\n            display: 'flex',\n            flexDirection: 'column',\n            marginLeft: 10,\n            padding: 5\n        },\n        text: {\n            fontSize: 1 + 'em',\n            fontWeight: 'normal',\n            margin: 0,\n        },\n        greenTxt: {\n            fontSize: 0.8 + 'em',\n            fontWeight: 'normal',\n            margin: 0,\n            color: '#00c452'\n        },\n        redTxt: {\n            fontSize: 0.8 + 'em',\n            fontWeight: 'normal',\n            margin: 0,\n            color: 'red'\n        }\n    }\n    return (\n        <div style={style.container}>\n            <label class=\"checkboxContainer\">\n                <input type=\"checkbox\" />\n                <span class=\"checkmark\" />\n            </label>\n            <img src={props.src} style={style.img} />\n            <div style={style.textCon}>\n                <h3 style={style.text}>{props.name}</h3>\n                <h3 style={style.text}>{props.frames}</h3>\n                <div style={{ display: \"flex\", flexDirection: 'row', alignItems: 'center' }}>\n                    <h3 style={props.visible ? style.greenTxt : style.redTxt}>{props.visible ? \"Visible\" : \"Not Visible\"}</h3>\n                    <i style={{ marginLeft: 5, fontSize: 'larger' }} className=\"fa fa-volume-up\"></i>\n                </div>\n            </div>\n        </div>\n    );\n}","D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\Screens\\AddVideo.js",["33"],"import React, { Component } from 'react';\nimport '../App.css';\nimport { Nav, SideDrawer } from '../Components'\nimport image from '../img.jpg'\nimport axios from 'axios';\nlet filename;\nclass VideoScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file:''\n    };\n    this.setShown = this.setShown.bind(this);\n    \n  }\n  setShown(value) {\n    this.setState({ shown: value })\n  }\n  componentDidMount() {\n   \n  }\n  onChangeFile(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    var file = event.target.files[0];\n    filename=file.name\n    console.log(filename);\n\n    var myHeaders = new Headers();\n     myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n    const data = new FormData();\n    data.append(\"userid\", \"48886ACD\");\n    data.append(\"file\",file);\n    // urlencoded.append();\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: data,\n      redirect: 'follow'\n    };\n\n    fetch(\"https://prod2.authenticity.ai/vr_api/redact/video_redact\", requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        let data = JSON.parse(result)\n        console.log(\"data\",data)\n       \n      })\n      .catch(error => console.log('error', error));\n\n}\nonDownloadFile(){\n \n\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n  var urlencoded = new URLSearchParams();\n  urlencoded.append(\"userid\", \"48886ACD\");\n  urlencoded.append(\"filename\", \"IMG_8222_redact.mp4\");\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: urlencoded,\n    redirect: 'follow'\n  };\n\n  fetch(\"https://prod2.authenticity.ai/vr_api/redact/download_result\", requestOptions)\n    .then(response => response.text())\n    .then(result => {\n      let data = JSON.parse(result)\n      console.log(\"data\",data)\n     \n    })\n    .catch(error => console.log('error', error));\n \n}\n  render() {\n    return (\n      <div className=\"App\">\n        <SideDrawer shown={this.state.shown} />\n        <div style={{ flex: 1, flexDirection: 'column', paddingRight: 10, paddingLeft: 10, height: 100 + \"%\", backgroundColor: 'rgb(219, 219, 219)' }}>\n          <Nav src={image} rightIcon={\n            <i className=\"fa fa-bars hover\" onClick={() => this.setShown(!this.state.shown)} style={{ fontSize: 2 + 'em', margin: 'auto', marginRight: 10, color: '#00c452' }}></i>\n          } />\n          {/* Recent */}\n          <br />\n          <h1>  Upload Video </h1>\n          <p> Test File </p>\n          <form class=\"addVideoForm\"> \n            <input type=\"file\" id=\"file\" onChange={this.onChangeFile.bind(this)} placeholder=\"Click to select video for recognition\" className=\"videoInput\" />\n            {/* <button className=\"uploadBtn\" > UPLOAD TEST FILE FOR RECOGHITION </button> */}\n            <button type=\"button\" className=\"resultBtn\" onClick={this.onDownloadFile.bind()}> DOWNLOAD RESULT AS JSON </button>\n          </form>\n          <br />\n        </div>\n    </div>\n    );\n  }\n}\n\nexport default VideoScreen;","D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\index.js",[],"D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\Screens\\VideoScreen.js",["34","35"],"import React, { Component } from 'react';\nimport '../App.css';\nimport { ItemCard, CaseCard, VideoCard, Nav, CategoryTextRow, SideDrawer } from '../Components'\nimport image from '../img.jpg'\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router\"\nclass VideoScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      shown: true,\n      videoData: []\n    };\n    this.setShown = this.setShown.bind(this);\n    this.downloadfile = this.downloadfile.bind(this);\n  }\n  setShown(value) {\n    this.setState({ shown: value })\n  }\n  componentDidMount() {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n    var urlencoded = new URLSearchParams();\n    urlencoded.append(\"userid\", \"48886ACD\");\n\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: urlencoded,\n      redirect: 'follow'\n    };\n\n    fetch(\"https://prod2.authenticity.ai/vr_api/redact/get_video_list\", requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        let data = JSON.parse(result)\n        this.setState({ videoData: data.message })\n      })\n      .catch(error => console.log('error', error));\n  }\n  downloadfile(video){\n    console.log(\"video\",video)\n    // this.props.history.push('/video');\n    var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n  var urlencoded = new URLSearchParams();\n  urlencoded.append(\"userid\", \"48886ACD\");\n  urlencoded.append(\"filename\", video);\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: urlencoded,\n    redirect: 'follow'\n  };\n  fetch(\"https://prod2.authenticity.ai/vr_api/redact/download_result\", requestOptions)\n    .then(response => response.text())\n    .then(result => {\n      let data = JSON.parse(result)\n      console.log(\"data\",data);\n     \n    \n     \n    })\n    .catch(error =>{\n    \n\n      console.log('error', error)\n    } );\n \n  }\n  render() {\n    console.log(this.state.videoData)\n    let recentVideos = [\n      {\n        src: image,\n        title: \"654321.mp4\",\n        description: \"5 hours ago\",\n        size: \"3 MB\",\n        to: \"/video\"\n      },\n      {\n        src: image,\n        title: \"123456.mp4\",\n        description: \"10 hours ago\",\n        size: \"10 MB\",\n        to: \"/video\"\n      },\n      {\n        src: image,\n        title: \"4145.mp4\",\n        description: \"7 hours ago\",\n        size: \"4 MB\",\n        to: \"/video\"\n      },\n      {\n        src: image,\n        title: \"654321.mp4\",\n        description: \"5 hours ago\",\n        size: \"3 MB\",\n        to: \"/video\"\n      },\n      {\n        src: image,\n        title: \"123456.mp4\",\n        description: \"10 hours ago\",\n        size: \"10 MB\",\n        to: \"/video\"\n      },\n      {\n        src: image,\n        title: \"4145.mp4\",\n        description: \"7 hours ago\",\n        size: \"4 MB\",\n        to: \"/video\"\n      },\n    ]\n\n    let Cases = [\n      {\n        title: \"ID 2002\",\n        videos: 10,\n        private: true,\n      },\n      {\n        title: \"ID 23\",\n        videos: 13,\n        shared: true\n      },\n      {\n        title: \"ID 2402\",\n        videos: 5,\n        private: true\n      },\n      {\n        title: \"ID 2002\",\n        videos: 10,\n        private: true,\n      },\n      {\n        title: \"ID 23\",\n        videos: 13,\n        shared: true\n      },\n      {\n        title: \"ID 2402\",\n        videos: 5,\n        private: true\n      },\n    ]\n\n    // let myVideos = [\n    //   {\n    //     type: \"MP4\",\n    //     name: \"313124-1\",\n    //     size: \"19 MB\",\n    //     status: \"In Progress\",\n    //     time: \"Today\"\n    //   },\n    //   {\n    //     type: \"MP4\",\n    //     name: \"313124-1\",\n    //     size: \"19 MB\",\n    //     status: \"In Progress\",\n    //     time: \"Today\"\n    //   }, {\n    //     type: \"MP4\",\n    //     name: \"313124-1\",\n    //     size: \"19 MB\",\n    //     status: \"In Progress\",\n    //     time: \"Today\"\n    //   }, {\n    //     type: \"MP4\",\n    //     name: \"313124-1\",\n    //     size: \"19 MB\",\n    //     status: \"In Progress\",\n    //     time: \"Today\"\n    //   }, {\n    //     type: \"MP4\",\n    //     name: \"313124-1\",\n    //     size: \"19 MB\",\n    //     status: \"In Progress\",\n    //     time: \"Today\"\n    //   },\n    // ]\n\n\n\n    let RowContents = [];\n    const Contents = Cases.reduce((acc, item, i) => {\n      RowContents.push(<CaseCard containerStyle={{ width: 100 + \"%\" }} title={item.title} videos={item.videos} private={item.private} shared={item.shared} />);\n      if (i / 2 === 1) {\n        acc.push(<div style={{ display: 'flex', flexDirection: 'row' }}>{RowContents}</div>);\n        RowContents = [];\n      }\n      return acc;\n    }, [])\n    Contents.push(<div style={{ display: 'flex', flexDirection: 'row' }}>{RowContents}</div>);\n\n\n\n    let style = {\n      tableContainer: {\n        display: 'flex',\n        margin: 10,\n        padding: 7,\n        flexDirection: 'row',\n        alignItems: 'center',\n        position: 'relative',\n      },\n      tableLastIcon: {\n        position: 'absolute',\n        right: 0,\n        marginRight: 10,\n        fontSize: 1 + 'em',\n        top: 50 + \"%\",\n        transform: \"translateY(-50%)\",\n      },\n      tableTitle: {\n        flex: 1,\n        fontSize: 1 + 'em',\n        fontWeight: 'bold',\n        color: '#000',\n        margin: 0\n      },\n    \n    }\n\n  \n    return (\n      <div className=\"App\">\n        <SideDrawer shown={this.state.shown} />\n        <div style={{ flex: 1, flexDirection: 'column', paddingRight: 10, paddingLeft: 10, height: 100 + \"%\", backgroundColor: 'rgb(219, 219, 219)' }}>\n\n\n          <Nav src={image} rightIcon={\n            <i className=\"fa fa-bars hover\" onClick={() => this.setShown(!this.state.shown)} style={{ fontSize: 2 + 'em', margin: 'auto', marginRight: 10, color: '#00c452' }}></i>\n          } />\n\n\n          {/* Recent */}\n          <br />\n          <Link to=\"/addVideo\" className=\"addBtn hover\"> Add Video</Link>\n          <br />\n          <CategoryTextRow title=\"Recent Videos\" rightTxt=\"View All\" />\n          <div style={{ display: 'flex', flexDirection: 'row' }} className=\"smVideos\">\n            {this.state.videoData.length ? this.state.videoData.map((i, index) => {\n              if (index < 3) {\n                return <ItemCard linkStyle={{ width: 100 + \"%\",display:'flex',flex:1 }} containerClassName=\"itemCardSm\" containerStyle={{ width: 100 + \"%\",display:'flex' }}\n                  src={image} title={i.Video} description={i.Status} size={\"3 MB\"} to={\"/video\"} />\n              }\n            }\n            )\n              : null}\n          </div>\n\n          {/* Cases */}\n          <CategoryTextRow title=\"Cases\" rightTxt=\"View All\" />\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\n            {Contents}\n          </div>\n\n          {/* Videos */}\n          <CategoryTextRow title=\"My Videos\" rightTxt=\"View All\" />\n          <div style={style.tableContainer}>\n            <h1 style={style.tableTitle}>Name</h1>\n            <h1 style={style.tableTitle}>File Size</h1>\n            <h1 style={style.tableTitle}>Status</h1>\n            <h1 style={style.tableTitle}>Last Edited</h1>\n\n            <i style={style.tableLastIcon} className=\"fa fa-arrow-down\"></i>\n          </div>\n          <div   style={{ display: 'flex', flexDirection: 'column' }}>\n            {this.state.videoData.map((i) =><button style={{border: 'none',\n    background: 'transparent',cursor:'pointer'}}  onClick={() => this.downloadfile(i.Video)}><VideoCard type={\"MP4\"}   name={i.Video} size={(i.size/1024).toFixed(0)+\" MB\"} status={i.Status} time={\"Today\"}  /></button> )}\n          </div>\n\n        </div>\n\n        <div style={{ flex: 0.3, background: 'white', flexDirection: 'column' }} className=\"hideSM\">\n\n          <div style={{ marginTop: 20, display: 'flex', flexDirection: 'row', marginLeft: 10, marginBottom: 30, alignItems: 'center' }}>\n            <button className=\"activeBtn hover\">Activity</button>\n            <button className=\"disactiveBtn hover\">For Review</button>\n          </div>\n\n          <div className=\"timeline\">\n            <div className=\"container left\">\n              <div className=\"content\">\n                <h2 style={{ margin: 0 }}>Today</h2>\n                <ItemCard src={recentVideos[0].src} title={recentVideos[0].title} description={recentVideos[0].description} size={recentVideos[0].size} />\n              </div>\n            </div>\n            <div className=\"container left\">\n              <div className=\"content\">\n                <h2 style={{ margin: 0 }}>Yesterday</h2>\n                <ItemCard src={recentVideos[0].src} title={recentVideos[0].title} description={recentVideos[0].description} size={recentVideos[0].size} />\n              </div>\n              <div className=\"content\">\n                <ItemCard src={recentVideos[0].src} title={recentVideos[0].title} description={recentVideos[0].description} size={recentVideos[0].size} />\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default VideoScreen;","D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\reportWebVitals.js",[],"D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\App.js",[],{"ruleId":"36","severity":1,"message":"37","line":73,"column":25,"nodeType":"38","endLine":73,"endColumn":66},{"ruleId":"36","severity":1,"message":"37","line":283,"column":17,"nodeType":"38","endLine":283,"endColumn":83},{"ruleId":"36","severity":1,"message":"37","line":328,"column":13,"nodeType":"38","endLine":328,"endColumn":53},{"ruleId":"36","severity":1,"message":"37","line":435,"column":13,"nodeType":"38","endLine":435,"endColumn":54},{"ruleId":"39","severity":1,"message":"40","line":5,"column":8,"nodeType":"41","messageId":"42","endLine":5,"endColumn":13},{"ruleId":"39","severity":1,"message":"43","line":6,"column":10,"nodeType":"41","messageId":"42","endLine":6,"endColumn":20},{"ruleId":"44","severity":1,"message":"45","line":249,"column":80,"nodeType":"46","messageId":"47","endLine":249,"endColumn":82},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd"]