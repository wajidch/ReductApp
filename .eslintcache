<<<<<<< HEAD
[{"D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\Components.js":"1","D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\Screens\\AddVideo.js":"2","D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\index.js":"3","D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\Screens\\VideoScreen.js":"4"},{"size":13457,"mtime":1607448092000,"results":"5","hashOfConfig":"6"},{"size":2955,"mtime":1608135888848,"results":"7","hashOfConfig":"6"},{"size":500,"mtime":1607448092000,"results":"8","hashOfConfig":"6"},{"size":7938,"mtime":1607707403144,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"6em3q0",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\Components.js",["19","20","21","22"],"import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport image from \"./img.jpg\"\n\nexport function ItemCard(props) {\n    let style = {\n        container: {\n            overflow: 'hidden',\n            borderRadius: 10,\n            padding: 10,\n            backgroundColor: '#fff',\n            display: 'flex',\n            flexDirection: 'row',\n            margin: 10,\n            boxShadow: '0px 4px 5px silver',\n            width: 100 + \"%\"\n        },\n        img: {\n            width: 100 + \"%\",\n            height: 100 + \"%\",\n            objectFit: 'cover',\n        },\n        imgCon: {\n            width: 90,\n            height: 90,\n            minWidth: 90,\n            minHeight: 90,\n            borderRadius: 10,\n            overflow: 'hidden',\n            position: 'relative'\n        },\n        imgTxt: {\n            position: 'absolute',\n            bottom: 0,\n            margin: 0,\n            padding: 0,\n            backgroundColor: 'rgba(0, 196, 82,0.8)',\n            width: 100 + \"%\",\n            fontSize: 0.9 + 'em',\n            color: 'white',\n            textAlign: 'center',\n            fontWeight: 500\n        },\n        textCon: {\n            marginLeft: 5,\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n        },\n        title: {\n            fontWeight: 'bold',\n            fontSize: 1.2 + 'em',\n            margin: 0,\n            marginBottom: 5\n        },\n        description: {\n            fontSize: 0.8 + 'em',\n            margin: 0,\n        },\n        linkStyle: {\n            display: 'flex',\n            color: 'black',\n            textDecoration: 'none',\n            width: 100 + \"%\"\n        }\n    }\n    let limit = 10;\n    return (\n        <Link to={props.to} style={{ ...style.linkStyle, ...props.linkStyle }} >\n            <abbr title={props.title.length > limit ? props.title : null} style={{ textDecoration: 'none',display:'flex',width:100+'%' }}>\n                <div style={{ ...style.container, ...props.containerStyle }} className={props.containerClassName}>\n                    <div style={style.imgCon}>\n                        <img src={props.src} style={style.img} />\n                        <h1 style={style.imgTxt}>{props.size}</h1>\n                    </div>\n                    <div style={style.textCon}>\n                        <h4 style={style.title}>{props.title ? props.title.length > limit ? props.title.slice(0, limit) + \"...\" : props.title : null}</h4>\n                        <p style={style.description}>{props.description}</p>\n                    </div>\n                </div>\n            </abbr>\n        </Link>\n    );\n}\n\n\nexport function CaseCard(props) {\n    let style = {\n        container: {\n            display: 'flex',\n            margin: 10,\n            padding: 5,\n            flexDirection: 'row',\n            backgroundColor: '#fff',\n            borderRadius: 10,\n            position: 'relative',\n            boxShadow: '0px 4px 5px silver',\n        },\n        icon: {\n            margin: 5,\n            color: '#00c452',\n            fontSize: 2 + 'em'\n        },\n        title: {\n            fontWeight: 'bold',\n            fontSize: 1 + 'em',\n            margin: 0,\n        },\n        description: {\n            fontSize: 0.8 + 'em',\n            margin: 0,\n            fontWeight: 500,\n            color: 'gray'\n        },\n        textCon: {\n            marginLeft: 5\n        },\n        moreIcon: {\n            position: 'absolute',\n            right: 0,\n            marginRight: 10,\n            fontSize: 1.5 + 'em',\n            top: 50 + \"%\",\n            transform: \"translateY(-50%)\",\n        },\n    }\n    return (\n        <div style={{ ...style.container, ...props.containerStyle }}>\n            <i style={style.icon} className=\"fa fa-folder\"></i>\n            <div style={style.textCon}>\n                <h3 style={style.title}>{props.title}</h3>\n                <h3 style={style.description}>{props.videos} Videos - {props.private ? \"Private\" : null} {props.shared ? \"Shared\" : null}</h3>\n            </div>\n            <i style={style.moreIcon} className=\"fa fa-ellipsis-v hover\"></i>\n        </div>\n    )\n}\n\nexport function VideoCard(props) {\n    let style = {\n        container: {\n            display: 'flex',\n            margin: 10,\n            padding: 7,\n            flexDirection: 'row',\n            backgroundColor: '#fff',\n            borderRadius: 10,\n            alignItems: 'center',\n            position: 'relative',\n            boxShadow: '0px 4px 5px silver',\n        },\n        moreIcon: {\n            position: 'absolute',\n            right: 0,\n            marginRight: 10,\n            fontSize: 1.5 + 'em',\n            top: 50 + \"%\",\n            transform: \"translateY(-50%)\",\n        },\n        description: {\n            flex: 1,\n            fontSize: 0.8 + 'em',\n            fontWeight: 500,\n            color: '#000',\n        },\n        type: {\n            backgroundColor: \"#00c452\",\n            borderRadius: 5,\n            width: 40,\n            height: 40,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            color: '#fff'\n        },\n        typeNameCon: {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            flex: 1\n        }\n    }\n    return (\n        <div style={style.container}>\n            <div style={style.typeNameCon}>\n                <div style={style.type}>\n                    {props.type}\n                </div>\n                <h1 style={{ ...style.description, marginLeft: 10, flex: 0 }}>{props.name}</h1>\n            </div>\n            <h1 style={style.description}>{props.size}</h1>\n            <h1 style={style.description}>{props.status}</h1>\n            <h1 style={style.description}>{props.time}</h1>\n\n            <i style={style.moreIcon} className=\"fa fa-ellipsis-v hover\"></i>\n        </div>\n    )\n}\n\nexport function Nav(props) {\n    let style = {\n        container: {\n            display: 'flex',\n            flexDirection: 'row',\n            padding: 10,\n        },\n        searchIcon: {\n            fontSize: 1.3 + 'em',\n        },\n        inputCon: {\n            display: 'flex',\n            flex: 4,\n            backgroundColor: '#fff',\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: 'center',\n            alignItems: 'center',\n            overflow: 'hidden'\n        },\n        input: {\n            borderWidth: 0,\n            height: 100 + \"%\",\n            width: 100 + \"%\",\n            marginLeft: 10,\n            fontSize: 0.9 + \"em\"\n        },\n        profileCon: {\n            flex: 1,\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            alignItems: 'center',\n        },\n        bellIcon: {\n            color: \"#00c452\",\n            fontSize: 1.5 + 'em'\n        },\n        bellCon: {\n            position: 'relative'\n        },\n        bellNotification: {\n            height: 8,\n            width: 8,\n            borderRadius: 100,\n            borderWidth: 2,\n            borderColor: '#fff',\n            borderStyle: 'solid',\n            position: 'absolute',\n            top: 2,\n            right: 0,\n            backgroundColor: 'red',\n        },\n        profilePic: {\n            width: 40,\n            height: 40,\n            borderRadius: 100,\n            marginLeft: 10\n        },\n        select: {\n            marginLeft: 10,\n            borderRadius: 5,\n            backgroundColor: 'transparent',\n            borderColor: 'transparent',\n            color: 'gray',\n        },\n    }\n    return (\n        <div style={style.container}>\n            {props.rightIcon}\n            {props.hideSearch ? null : <div style={style.inputCon} className=\"smSearchCon\">\n                <i style={style.searchIcon} className=\"fa fa-search\"></i>\n                <input style={style.input} placeholder=\"Search Files\" />\n            </div>}\n\n            <div style={{ flex: 0.3 }} className=\"navDividerDiv\"></div>\n            <div style={style.profileCon}>\n\n                <div style={style.bellCon} className=\"hover\">\n                    <i style={style.bellIcon} className=\"fa fa-bell\"></i>\n                    <div style={style.bellNotification}></div>\n                </div>\n\n                <img style={style.profilePic} className=\"hover\" src={props.src} />\n\n                <select style={style.select}>\n                    <option value=\"0\">Tom Avery</option>\n                    <option value=\"1\">Option</option>\n                    <option value=\"2\">Option</option>\n                </select>\n\n            </div>\n        </div>\n    );\n}\n\n\nexport function CategoryTextRow(props) {\n    let style = {\n        container: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            margin: 10,\n            alignItems: 'center'\n        },\n    }\n    return (\n        <div style={style.container}>\n            <h2 style={{ margin: 0 }}>{props.title}</h2>\n            <h6 style={{ margin: 0 }}>{props.rightTxt}</h6>\n        </div>\n    );\n}\n\nexport function SideDrawer(props) {\n    let style = {\n        container: {\n            backgroundColor: '#000',\n            flexDirection: 'column',\n            padding: 40,\n            minHeight: 100 + \"vh\",\n            height: 100 + '%',\n            margin: 0\n        },\n    }\n    return (\n        <div style={style.container} className={props.shown ? \"show dwrNav\" : \"dwrNav hide\"}>\n            <img src={image} style={{ height: 50 }}></img>\n            <Link to=\"/\" className=\"dwrLink\"><i className=\"fa fa-th-large dwrNavIcon\" />Dashboard</Link>\n            <Link to=\"/\" className=\"dwrLink\"><i className=\"fa fa-file dwrNavIcon\" />My Videos</Link>\n            <Link to=\"/\" className=\"dwrLink\"><i className=\"fa fa-history dwrNavIcon\" />Recent Videos</Link>\n            <Link to=\"/video\" className=\"dwrLink\"><i className=\"fa fa-users dwrNavIcon\" />Shared With Me</Link>\n            <Link to=\"/video\" className=\"dwrLink\"><i className=\"fa fa-trash dwrNavIcon\" />Deleted</Link>\n            <Link to=\"/video\" className=\"dwrLink\"><i className=\"fa fa-sign-out dwrNavIcon\" />Logout</Link>\n        </div>\n    );\n}\n\n\nexport function Button(props) {\n    let style = {\n        btn: {\n            padding: 10,\n            borderWidth: props.green ? 0 : 1,\n            borderColor: \"#000\",\n            borderStyle: 'solid',\n            borderRadius: 10,\n            boxShadow: '0px 4px 5px silver',\n            fontSize: 'large',\n            color: props.green ? '#fff' : '#000',\n            backgroundColor: props.green ? '#00c452' : '#fff',\n        }\n    }\n    return (\n        <button style={{ ...style.btn, ...props.style }} className={props.className ? props.className : \"hover\"} onClick={props.onClick}>{props.title}</button>\n    );\n}\n\nexport function TranscriptRow(props) {\n    let style = {\n        container: {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            margin: '5px 10px',\n        },\n        name: {\n            fontSize: 0.9 + 'em',\n            color: props.green ? '#00c452' : '#000',\n            margin: 0,\n            fontWeight: 'normal'\n        },\n        message: {\n            fontSize: 0.9 + 'em',\n            color: props.green ? '#00c452' : '#000',\n            margin: 0,\n            marginLeft: 10,\n            fontWeight: 'normal'\n        }\n    }\n\n    return (\n        <div style={{ ...style.container, ...props.containerStyle }}>\n            <h5 style={{ ...style.name, ...props.nameStyle }}>{props.name}:</h5>\n            <h5 style={{ ...style.message, ...props.messageStyle }}>{props.message}</h5>\n        </div>\n    );\n}\n\nexport function PeopleCard(props) {\n    let style = {\n        container: {\n            display: 'flex',\n            flexDirection: 'row',\n            margin: 10,\n        },\n        img: {\n            width: 90,\n            height: 90,\n            borderRadius: 10,\n            overflow: 'hidden',\n            objectFit: 'cover',\n            marginLeft: 10\n        },\n        textCon: {\n            display: 'flex',\n            flexDirection: 'column',\n            marginLeft: 10,\n            padding: 5\n        },\n        text: {\n            fontSize: 1 + 'em',\n            fontWeight: 'normal',\n            margin: 0,\n        },\n        greenTxt: {\n            fontSize: 0.8 + 'em',\n            fontWeight: 'normal',\n            margin: 0,\n            color: '#00c452'\n        },\n        redTxt: {\n            fontSize: 0.8 + 'em',\n            fontWeight: 'normal',\n            margin: 0,\n            color: 'red'\n        }\n    }\n    return (\n        <div style={style.container}>\n            <label class=\"checkboxContainer\">\n                <input type=\"checkbox\" />\n                <span class=\"checkmark\" />\n            </label>\n            <img src={props.src} style={style.img} />\n            <div style={style.textCon}>\n                <h3 style={style.text}>{props.name}</h3>\n                <h3 style={style.text}>{props.frames}</h3>\n                <div style={{ display: \"flex\", flexDirection: 'row', alignItems: 'center' }}>\n                    <h3 style={props.visible ? style.greenTxt : style.redTxt}>{props.visible ? \"Visible\" : \"Not Visible\"}</h3>\n                    <i style={{ marginLeft: 5, fontSize: 'larger' }} className=\"fa fa-volume-up\"></i>\n                </div>\n            </div>\n        </div>\n    );\n}","D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\Screens\\AddVideo.js",[],"D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\index.js",[],"D:\\fiver work\\peter projects\\Reduct App With Apis\\src\\Screens\\VideoScreen.js",["23"],{"ruleId":"24","severity":1,"message":"25","line":73,"column":25,"nodeType":"26","endLine":73,"endColumn":66},{"ruleId":"24","severity":1,"message":"25","line":283,"column":17,"nodeType":"26","endLine":283,"endColumn":83},{"ruleId":"24","severity":1,"message":"25","line":328,"column":13,"nodeType":"26","endLine":328,"endColumn":53},{"ruleId":"24","severity":1,"message":"25","line":435,"column":13,"nodeType":"26","endLine":435,"endColumn":54},{"ruleId":"27","severity":1,"message":"28","line":214,"column":80,"nodeType":"29","messageId":"30","endLine":214,"endColumn":82},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd"]
=======
[{"/Users/macbookpro/Desktop/ReductApp/src/index.js":"1","/Users/macbookpro/Desktop/ReductApp/src/Screens/AddVideo.js":"2","/Users/macbookpro/Desktop/ReductApp/src/Components.js":"3"},{"size":500,"mtime":1607708066479,"results":"4","hashOfConfig":"5"},{"size":2096,"mtime":1607708066477,"results":"6","hashOfConfig":"5"},{"size":13457,"mtime":1607708066477,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p5aroe",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/macbookpro/Desktop/ReductApp/src/index.js",[],"/Users/macbookpro/Desktop/ReductApp/src/Screens/AddVideo.js",[],"/Users/macbookpro/Desktop/ReductApp/src/Components.js",["14","15","16","17"],{"ruleId":"18","severity":1,"message":"19","line":73,"column":25,"nodeType":"20","endLine":73,"endColumn":66},{"ruleId":"18","severity":1,"message":"19","line":283,"column":17,"nodeType":"20","endLine":283,"endColumn":83},{"ruleId":"18","severity":1,"message":"19","line":328,"column":13,"nodeType":"20","endLine":328,"endColumn":53},{"ruleId":"18","severity":1,"message":"19","line":435,"column":13,"nodeType":"20","endLine":435,"endColumn":54},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]
>>>>>>> 31673bc5c68fe5363c6889d676c7e68654d976ef
